/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package analizadorLexico;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Reader;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author fabri
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnAnalizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtEntrada = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtResultado = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setToolTipText("Digite um codigo da linguagem L:");
        jPanel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPanel1.setName(""); // NOI18N

        btnAnalizar.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnAnalizar.setText("Analizar");
        btnAnalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalizarActionPerformed(evt);
            }
        });

        txtEntrada.setColumns(20);
        txtEntrada.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        txtEntrada.setRows(5);
        jScrollPane1.setViewportView(txtEntrada);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Digite um codigo da linguagem L:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 154, Short.MAX_VALUE)
                        .addComponent(btnAnalizar)
                        .addGap(19, 19, 19))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(7, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(16, 16, 16))
                    .addComponent(btnAnalizar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        txtResultado.setColumns(20);
        txtResultado.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        txtResultado.setRows(5);
        jScrollPane2.setViewportView(txtResultado);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("Resultado Análise Léxica:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.getAccessibleContext().setAccessibleName("Digite um codigo da linguagem L:");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAnalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalizarActionPerformed
       File arquivo = new File("arquivoTeste.txt");
       PrintWriter escrever;
        int cont = 1;
        try {
            escrever = new PrintWriter(arquivo);
            escrever.print(txtEntrada.getText());
            escrever.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            Reader leitor = new BufferedReader(new FileReader("arquivoTeste.txt"));
            Lexer lexer = new Lexer(leitor);
            String resultado = "";
            while(true){
                Tokens tokens = lexer.yylex();
                if(tokens == null){
                    resultado += "ANALIZADO TODOS TOKENS";
                    txtResultado.setText(resultado);
                    return;
                }
                switch (tokens) {
                 case QUEBRA_LINHA:
                    cont++;
                    resultado += "LINHA-> \t" + cont + "\n";
                    break;
                case TIPO_VAR:
                    resultado += "  <tipos de variaveis>\t" + lexer.lexeme + "\n";
                    break;
                case ASPAS:
                    resultado += "  <Aspas>\t" + lexer.lexeme + "\n";
                    break;
                case VAR:
                    resultado += "  <Varivavel da Linguagem>\t" + lexer.lexeme + "\n";
                    break;
                 case IFSULDEMINAS:
                    resultado += "  <Palavra Reservada IFSULDEMINAS>\t" + lexer.lexeme + "\n";
                    break;
                 case INICIO:
                    resultado += "  <Palavra Reservada INICIO>\t" + lexer.lexeme + "\n";
                    break;
                 case FIM:
                    resultado += "  <Palavra Reservada FIM>\t" + lexer.lexeme + "\n";
                    break;
                 case COMPILADORES:
                    resultado += "  <Palavra Reservada COMPILADORES>\t" + lexer.lexeme + "\n";
                    break;
                 case BUSCAR:
                    resultado += "  <Palavra Reservada buscar>\t" + lexer.lexeme + "\n";
                    break;
                 case EM:
                    resultado += "  <Palavra Reservada em>\t" + lexer.lexeme + "\n";
                    break;
                 case SUBSTITUIR:
                    resultado += "  <Palavra Reservada substituir>\t" + lexer.lexeme + "\n";
                    break;
                 case POR:
                    resultado += "  <Palavra Reservada por>\t" + lexer.lexeme + "\n";
                    break;
                 case EXTRAIR:
                    resultado += "  <Palavra Reservada extrair>\t" + lexer.lexeme + "\n";
                    break;
                 case DE:
                    resultado += "  <Palavra Reservada de>\t" + lexer.lexeme + "\n";
                    break;
                 case ATE:
                    resultado += "  <Palavra Reservada ate>\t" + lexer.lexeme + "\n";
                    break;
                 case COMPRIMENTO:
                    resultado += "  <Palavra Reservada comprimento>\t" + lexer.lexeme + "\n";
                    break;
                 case CONCATENAR:
                    resultado += "  <Palavra Reservada concatenar>\t" + lexer.lexeme + "\n";
                    break;
                 case COMPARAR:
                    resultado += "  <Palavra Reservada comparar>\t" + lexer.lexeme + "\n";
                    break;
                 case COMENTARIO:
                    resultado += "  <COMENTARIO>\t" + lexer.lexeme + "\n";
                    break;
                 case OP_ARITIMETICOS:
                    resultado += "  <Operadores aritméticos>\t" + lexer.lexeme + "\n";
                    break;
                 case OP_ATRIBUICAO:
                    resultado += "  <Operadores atribuição>\t" + lexer.lexeme + "\n";
                    break;
                 case OP_RELACIONAL:
                    resultado += "  <Operadores Relacionados>\t" + lexer.lexeme + "\n";
                    break;
                 case OP_INCREMENTO:
                    resultado += "  <Operadores Incremento>\t" + lexer.lexeme + "\n";
                    break;
                 case OP_LOGICO:
                    resultado += "  <Operadores lógicos>\t" + lexer.lexeme + "\n";
                    break;
                 case ABRE_PARENTESES:
                    resultado += "  <Abre Parenteses>\t" + lexer.lexeme + "\n";
                    break;
                 case FECHA_PARENTESES:
                    resultado += "  <Fecha Parenteses>\t" + lexer.lexeme + "\n";
                    break;
              
	
                 case ABRE_CHAVES:
                    resultado += "  <Abre Chaves>\t" + lexer.lexeme + "\n";
                    break;
                 case FECHA_CHAVES:
                    resultado += "  <Fecha Chaves>\t" + lexer.lexeme + "\n";
                    break;
                 case ABRE_COLCHETES:
                    resultado += "  <Abre Colchetes>\t" + lexer.lexeme + "\n";
                    break;
                 case FECHA_COLCHETES:
                    resultado += "  <Fecha Colchetes>\t" + lexer.lexeme + "\n";
                    break;
                 case  PONTO_VIRGULA:
                    resultado += "  <Ponto e Virgula>\t" + lexer.lexeme + "\n";
                    break;
                 case ENQUANTO:
                    resultado += "  <Palavra Reservada enquanto>\t" + lexer.lexeme + "\n";
                    break;
                 case PARA:
                    resultado += "  <Palavra Reservada para>\t" + lexer.lexeme + "\n";
                    break;
                 case COND_SE:
                    resultado += "  <Palavra Reservada se>\t" + lexer.lexeme + "\n";
                    break;
                 case COND_SENAO:
                    resultado += "  <Palavra Reservada senao>\t" + lexer.lexeme + "\n";
                    break;
                 case VAL_BOOLEANO:
                    resultado += "  <Valor Booleano>\t" + lexer.lexeme + "\n";
                    break;
                 case VAL_INTEIRO:
                    resultado += "  <Valor Inteiro>\t" + lexer.lexeme + "\n";
                    break;
                 case VAL_TEXTO:
                    resultado += "  <Valor Texto>\t" + lexer.lexeme + "\n";
                    break;
                 default:
                    resultado += "  < " + lexer.lexeme + " >\n";
                    break;
	
                }
                        
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_btnAnalizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnalizar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtEntrada;
    private javax.swing.JTextArea txtResultado;
    // End of variables declaration//GEN-END:variables
}
